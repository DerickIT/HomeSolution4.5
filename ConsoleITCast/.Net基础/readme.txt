静态类中可以有无参构造函数，不支持有残构造函数

通过virtual，abstract，interface来实现多态
抽象方法不能有任何实现，必须包含在抽象类中

sealed密封类，类不能被继承，标记里面的方法不能重写

使用ildasm，。netreflector查看il代码

as转换时校验一次直接转换，is和（T）会通过反射校验类型两次

传递性，单根性 --类
里氏替换原则  子类转换成父类，负责转换成子类 逆变，协变

抽象类的作用是为了继承，不能被实例化

抽象对象，子类实现，具体对象，具体方法，父类
抽象类中可以有实例成员（构造函数）
接口用来处理多重继承，解决类不能多继承，目的用来实现多态

接口中的成员不能有访问修饰符，默认是public，不能有字段，可以包含方法

多态的意义：程序可扩展性，最终节省成本，提高效率。
显示实现接口，被实现的方法变成private，所以通过类对象访问不到，可以解决方法重名的问题
当一个抽象类实现接口时，如果不想把接口中的成员实现，可以把成员设置成abstract类型

接口--向上转型，子，父，爷
单一职责原则，避免定义庞大的接口，多功能接口，避免接口污染
_____________________________________________________________________
枚举都是互斥的
枚举在编译完成后都是以对应的数值常量存在

标志枚举FileInfo.Attribute          标志枚举不互斥，可以互相组合 ，以二进制存在
[Flags]
public enum meiju
{
zhn,
zzz
}
——————————————————————————————————
结构是值类型，类是引用类型，不能继承，不实现多态，可以实现接口
如果存储的数据量比较小，不需要面向对象特性可以使用结构
————————————————————————————————
数据转换
值类型转引用类型是装箱，引用类型转换成值类型是拆箱，as转换不会抛出异常
convert可以将任意类型转换成任意类型
————————————————————————————
SByte不符合cls，不符合规范就会不能跨语言跨平台
——————————————————————————————————————
值类型赋值拷贝一个副本
引用类型赋值是赋值对象的引用地址【【复制对对象的引用

复制引用和复制值，
引用类型当做参数传递，改变了对象后，如果有新的对象实例化，则不会影响到原对象

ref（按引用传递）与out
ref没有在内存中开辟新的空间，就是一个地址
值传递传递的是stack中的内容，ref传递的是stack本身的地址
对于引用类型来说，栈中存储的是堆中的地址
对于值类型来说，栈中存储的就是实际的值

不同异常不同处理方式
——————————————————————————————
可变参数 params
可变参数可以传一个参数，也可以传多个参数
如果不为可变参数传值，可变参数的数组是一个长度为0的数组，不死null


当一个方法要返回多个值时可以考虑使用out
ref主要是吧一个值带进去再带出
out方法主要是为了吧一个值带出来，不要给out值初始化，out不能把纸带进去，自能带出
——————————————————————————
C#将cs编译成exe，然后clr 运行EXE由jit即时编译成il代码，根据当前机器配置，资源进行运行，跟java类似
c/c++直接将代码编译成机器码
——————————————————————————————————
字符串的一致性，不可变性（创建多大就是多大，不可变，改变的是引用的副本）
字符串池是给予字符串不可变性，s1='q',s2='q',s2='5',s1=(q)
常量和变量，常量在字符串池中
不拿原来的整合，而是开辟新的内存（拘留池）

